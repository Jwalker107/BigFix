<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>Template: Balloon Message via PowerShell</Title>
		<Description><![CDATA[<P>Use PowerShell to send a Balloon Tray Message</P>
<P>TODO:</P>
<UL>
<LI>Query Parameters 
<UL>
<LI>Message 
<LI>Title 
<LI>MessageType 
<LI>Duration</LI></UL>
<LI>Link upon Click</LI></UL>
<P>&nbsp;</P>
<P>Credit:</P>
<UL>
<LI>Based on powershell code from&nbsp;Boe Prox&nbsp;at <A href="https://github.com/proxb/PowerShell_Scripts">https://github.com/proxb/PowerShell_Scripts</A> 
<LI>MIT License 
<UL>
<LI>The MIT License (MIT) 
<LI>Copyright (c) 2016 Boe Prox 
<LI>Permission is hereby granted, free of charge, to any person obtaining a copy<BR>of this software and associated documentation files (the "Software"), to deal<BR>in the Software without restriction, including without limitation the rights<BR>to use, copy, modify, merge, publish, distribute, sublicense, and/or sell<BR>copies of the Software, and to permit persons to whom the Software is<BR>furnished to do so, subject to the following conditions: 
<LI>The above copyright notice and this permission notice shall be included in all<BR>copies or substantial portions of the Software. 
<LI>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<BR>IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<BR>FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<BR>AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<BR>LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<BR>OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<BR>SOFTWARE.<BR></LI></UL></LI></UL>
<BLOCKQUOTE style="MARGIN-RIGHT: 0px" dir=ltr>
<P>&nbsp;</P></BLOCKQUOTE>
<P>&nbsp;</P>]]></Description>
		<Relevance>windows of operating system AND (if exists property "in proxy agent context" then not in proxy agent context else true)</Relevance>
		<Relevance>exists logged on users</Relevance>
		<Category></Category>
		<Source>Internal</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2022-10-21</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Fri, 21 Oct 2022 18:29:11 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[parameter "Message"="Hello, World!"
parameter "Title"="Hello from BigFix!"
// valid MessageType values are "Error", "Info", "None", or "Warning" 
parameter "MessageType"="Info"
// Duration is how long to display the message (in milliseconds)
parameter "Duration"="10000"
// Path to a file to use as the display icon.  Defaults to PowerShell icon if not provided.
parameter "SysTrayIcon"="{pathname of storage folder of client}\BESClientUI.exe"

continue if {exists logged on users whose (active of it)}
parameter "UserFolder"="{(preceding text of first "|" of it | it) of concatenation "|" of profile folders of users of logged on users whose (active of it)}\BESActionUI\{id of action as string}"
folder delete "{parameter "UserFolder"}"
folder create "{parameter "UserFolder"}"


createfile until _EOF_EOF_EOF_EOF
Function Invoke-BalloonTip {{
    <#
    .Synopsis
        Display a balloon tip message in the system tray.
    .Description
        This function displays a user-defined message as a balloon popup in the system tray. This function
        requires Windows Vista or later.
    .Parameter Message
        The message text you want to display.  Recommended to keep it short and simple.
    .Parameter Title
        The title for the message balloon.
    .Parameter MessageType
        The type of message. This value determines what type of icon to display. Valid values are
    .Parameter SysTrayIcon
        The path to a file that you will use as the system tray icon. Default is the PowerShell ISE icon.
    .Parameter Duration
        The number of seconds to display the balloon popup. The default is 1000.
    .Inputs
        None
    .Outputs
        None
    .Notes
         NAME:      Invoke-BalloonTip
         VERSION:   1.0
         AUTHOR:    Boe Prox
    #>

    [CmdletBinding()]
    Param (
        [Parameter(Mandatory=$True,HelpMessage="The message text to display. Keep it short and simple.")]
        [string]$Message,

        [Parameter(HelpMessage="The message title")]
         [string]$Title="Attention $env:username",

        [Parameter(HelpMessage="The message type: Info,Error,Warning,None")]
        [string]$MessageType="Info",
     
        [Parameter(HelpMessage="The path to a file to use its icon in the system tray")]
        [string]$SysTrayIconPath='C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe',     

        [Parameter(HelpMessage="The number of milliseconds to display the message.")]
        [int]$Duration=1000
    )

    Add-Type -AssemblyName System.Windows.Forms

    If (-NOT $global:balloon) {{
        $global:balloon = New-Object System.Windows.Forms.NotifyIcon

        #Mouse double click on icon to dispose
        [void](Register-ObjectEvent -InputObject $balloon -EventName MouseDoubleClick -SourceIdentifier IconClicked -Action {{
            #Perform cleanup actions on balloon tip
            Write-Verbose 'Disposing of balloon'
            $global:balloon.dispose()
            Unregister-Event -SourceIdentifier IconClicked
            Remove-Job -Name IconClicked
            Remove-Variable -Name balloon -Scope Global
        })
    }

    #Need an icon for the tray
    $path = Get-Process -id $pid | Select-Object -ExpandProperty Path

    #Extract the icon from the file
    $balloon.Icon = [System.Drawing.Icon]::ExtractAssociatedIcon($SysTrayIconPath)

    #Can only use certain TipIcons: [System.Windows.Forms.ToolTipIcon] | Get-Member -Static -Type Property
    $balloon.BalloonTipIcon  = [System.Windows.Forms.ToolTipIcon]$MessageType
    $balloon.BalloonTipText  = $Message
    $balloon.BalloonTipTitle = $Title
    $balloon.Visible = $true

    #Display the tip and specify in milliseconds on how long balloon will stay visible
    $balloon.ShowBalloonTip($Duration)

    Write-Verbose "Ending function"

}
Invoke-BalloonTip {if exists parameter "Message" whose (it as trimmed string != "") then "-Message %22" & parameter "Message" & "%22" else ""} {if exists parameter "Title" whose (it as trimmed string != "") then "-Title %22" & parameter "Title" & "%22" else ""} {if exists parameter "MessageType" whose (it as trimmed string != "") then "-MessageType %22" & parameter "MessageType" & "%22" else ""} {if exists parameter "Duration" whose (it as trimmed string != "") then "-Duration %22" & parameter "Duration" & "%22" else ""} {if exists parameter "SysTrayIcon" whose (it as trimmed string != "") then "-SysTrayIcon %22" & parameter "SysTrayIcon" & "%22" else ""}
_EOF_EOF_EOF_EOF

// Copy the PowerShell script to a folder the user can read
delete "{parameter "UserFolder"}\user-balloontip.ps1"
copy __createfile "{parameter "UserFolder"}\user-balloontip.ps1"

//Execute the PowerShell UI as the current user
// PowerShell flashes a console window when it starts, that may last 1-2 seconds.
// Wrap it in a CMD because CMD...flashes faster.
// Totally-hidden requires wscript but trying to avoid wscript dependency

action uses wow64 redirection false

override wait
hidden=true
runas=currentuser
wait powershell.exe -WindowStyle Hidden -ExecutionPolicy Bypass -File "{parameter "UserFolder"}\user-balloontip.ps1"]]></ActionScript>
		</DefaultAction>
	</Task>
</BES>
